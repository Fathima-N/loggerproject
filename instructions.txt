- you are going to write a Logger API
- a logger API is a web API that accepts messages from clients and logs precisely *when* those messages were received, along with other useful data.
- it is used by distributed systems as a more efficient `console.log`. Meaning that developers know to send their important messages (events) generated by their application to the Logger. This allows them to analyze the behaviour of their system in a single place, even when many different components are involved.
- here is an example of one: https://www.loggly.com/docs/api-overview/
- Your API should allow multiple teams to track their own collections of events


9
- When logging an event, users should indicate the level of criticality of the event, typically "error", "warning", "info"
- When logging an event, users should be allowed to add 'tags' to their event.  For example a tag could be "db" helping them categorize events by the modules where they are originated.
- Once an event is logged it cannot be deleted
- The API should allow the retrieval of all events that were received within a range of dates, a minimum criticality level and optionally tags.
- Lastly you should write a simple front end application with JQuery that demonstrates the use of the API to track user behaviour and report on events tracked about the user.  For example add your Logger to your Tweeter project.

Aim to have this done by Monday but feel free to ask us throughout the process for validation.